server:
  port: 8080
  servlet:
    context-path: /
    session:
      timeout: 30m

spring:
  application:
    name: demo1
  datasource:
    url: jdbc:mysql://127.0.0.1:3306/snow?useUnicode=true&characterEncoding=UTF-8&useAffectedRows=true&serverTimezone=Asia/Shanghai&allowMultiQueries=true
    username: root
    password: 123456
    driver-class-name: com.mysql.cj.jdbc.Driver
  data:
    redis:
      host: localhost
      port: 6379
      password: 123456
      database: 0
      # Lettuce连接池
      lettuce:
        pool:
          # 最小空闲连接
          min-idle: 5
          # 最大空闲连接
          max-idle: 10
          # 最大连接数
          max-active: 100
          # 连接分配应该阻塞的最大时间
          max-wait: 2000
  mvc:
    static-path-pattern:  /static/** # 指定静态资源的访问路径模式
    resources:
      static-locations: /static/ # 指定静态资源文件的存储位置
    view:
      prefix: /WEB-INF/view/ # view前缀
      suffix: .jsp # view后缀，如：.jsp
  # 配置rabbitmq
  rabbitmq:
    # 主机ip，修改成实际rabbitmq配置
    host: 127.0.0.1
    # 端口，修改成实际rabbitmq配置
    port: 5672
    # 用户名，修改成实际rabbitmq配置
    username: guest
    # 用户密码，修改成实际rabbitmq配置
    password: guest
    # 虚拟host可以不设置，默认配置写virtual-host: /
    virtual-host: /
    # 开启confirm模式，确认消息已发送到交换机
    publisher-confirm-type: correlated
    # 以开启Return模式，确认消息已发送到队列
    publisher-returns: true
#    # 如果消息没有送达queue 默认为false直接丢弃失败数据，true将失败消息发送给回调函数
#    template:
#      mandatory: true
    # 设置消费端手动ack
    listener:
      simple:
        acknowledge-mode: manual
        retry:
          # 开启消息重发机制
          enabled: true
          # 重试次数3
          max-attempts: 3
          #消费者重试间隔次数 2s
          initial-interval: 2000

#mybatis-plus:
#  mapper-locations: classpath:com/lx/framework/tool/demo/mapper/xml/*.xml
logging:
  config: classpath:log4j2.xml
  #配置mybatis打印sql语句
  level:
    com.lx.framework.demo1.user.mapper: debug
dynamic:
  datasource:
    enabled: false
encrypt:
  algorithm: SM4
sm4:
  public:
    key: 7210518927313387

